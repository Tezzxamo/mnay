buildscript {
    ext {
        springBootVersion = '3.3.0'
        camundaVersion = '7.18.0'
        lombokVersion = '1.18.32'
        hutoolVersion = '5.8.25'
        minioVersion = '8.5.7'
        awsSdkVersion = '1.12.609'
        springDocVersion = '2.5.0'
        transmittableVersion = '2.9.0'
        saTokenVersion = '1.38.0'
        mapstructVersion = '1.5.5.Final'
        mysqlVersion = '8.0.33'
        easyExcelVersion = '3.3.3'
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'io.spring.dependency-management' version '1.1.5'
}

bootJar {
    mainClass = 'cn.mnay.MnayServerApplication'
}

allprojects {
    group = 'cn.mnay'
    version = '1.0.0-SNAPSHOT'

}

java {
    sourceCompatibility = JavaVersion.VERSION_21
}

repositories {
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom("org.springframework.boot:spring-boot-dependencies:${springBootVersion}") // 引入Spring Boot BOM
        // 引入camunda bom
        mavenBom("org.camunda.bpm:camunda-bom:${camundaVersion}")
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot' // 如果子模块是Spring Boot应用，则启用
    apply plugin: 'io.spring.dependency-management' // 继承依赖管理

    group = rootProject.group
    version = rootProject.version

    java {
        sourceCompatibility = JavaVersion.VERSION_21
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        // configuration-processor:
        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
        // spring-boot-starter-web:
        implementation 'org.springframework.boot:spring-boot-starter-web'
        // jpa
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        // redis
        implementation 'org.springframework.boot:spring-boot-starter-data-redis'
        // aop
        implementation 'org.springframework.boot:spring-boot-starter-aop'
        // validation
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        // mail
        implementation 'org.springframework.boot:spring-boot-starter-mail'

        // mysql
        implementation "mysql:mysql-connector-java:${mysqlVersion}"
        // swagger
        implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springDocVersion}"
        // lombok:
        compileOnly "org.projectlombok:lombok:${lombokVersion}"
        annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
        // sa-token
        implementation "cn.dev33:sa-token-spring-boot3-starter:${saTokenVersion}"
        implementation "cn.dev33:sa-token-redis-jackson:${saTokenVersion}"
        implementation "cn.dev33:sa-token-jwt:${saTokenVersion}"
        // hutool
        implementation "cn.hutool:hutool-all:${hutoolVersion}"
        // mapstruct
        implementation "org.mapstruct:mapstruct:${mapstructVersion}"
        annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
        // easy-excel
        implementation "com.alibaba:easyexcel:${easyExcelVersion}"

        // jaxb
        implementation 'javax.xml.bind:jaxb-api:2.3.1'


        // camunda
        implementation "org.camunda.bpm.springboot:camunda-bpm-spring-boot-starter:${camundaVersion}"
        implementation "org.camunda.bpm.springboot:camunda-bpm-spring-boot-starter-webapp:${camundaVersion}"

        // test:
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }

}
